The Persistence of Vision Raytracer, or POV-Ray, is a ray tracing program which generates images from a text-based scene description, and is available for a variety of computer platforms. It was originally based on DKBTrace, written by David Kirk Buck and Aaron A. Collins for the Amiga computers. There are also influences from the earlier Polyray raytracer contributed by its author Alexander Enzmann. POV-Ray is free and open-source software with the source code available under the AGPLv3. Many methods for generating the 3-D models are used, including a companion program "moray" for interactive modeling. Sometime in the 1980s, David Kirk Buck downloaded the source code for a Unix raytracer to his Amiga. He experimented with it for a while, eventually deciding to write his own raytracer, named DKBTrace after his initials. He posted it to the "You Can Call Me Ray" bulletin board system in Chicago, thinking others might be interested in it. In 1987, Aaron A. Collins downloaded DKBTrace and began working on an x86-based port of it. He and David Buck collaborated to add several more features. When the program proved to be more popular than anticipated, they could not keep up with demand for more features. Thus, in July 1991 David turned over the project to a team of programmers working in the GraphDev forum on CompuServe. At the same time, he felt that it was inappropriate to use his initials on a program he no longer maintained. The name "STAR" (Software Taskforce on Animation and Rendering) was considered, but eventually the name became the "Persistence of Vision Raytracer", or "POV-Ray" for short. POV-Ray was the first ray tracer to render an image in orbit, rendered by Mark Shuttleworth inside the International Space Station. Features of the application and a summary of its history are discussed in an interview with David Kirk Buck and Chris Cason on episode 24 of FLOSS Weekly. POV-Ray has matured substantially since it was created. Recent versions of the software include the following features: A Turing-complete scene description language (SDL) that supports macros and loops. Library of ready-made scenes, textures, and objects Support for a number of geometric primitives and constructive solid geometry Several kinds of light sources Atmospheric effects such as fog and media (smoke, clouds) Reflections, refractions, and light caustics using photon mapping Surface patterns such as wrinkles, bumps, and ripples, for use in procedural textures and bump mapping Radiosity Image format support for textures and rendered output, including TGA, PNG, JPEG (only input) among others Extensive user documentation One of POV-Ray's main attractions is its large collection of third party support. A large number of tools, textures, models, scenes, and tutorials can be found on the web. It is also a useful reference for those wanting to learn how ray tracing and related geometry and graphics algorithms work. The current official version of POV-Ray is 3.7. This version introduces: Support for Symmetric multiprocessing (SMP), to allow the renderer to take advantage of multiple processors. Support for High dynamic range imaging (HDRI), including the OpenEXR and Radiance file formats. Improved bounding using BSP trees. Some of the main features of previous release (3.6): Extends UV mapping to more primitives. Adds 16 and 32 bit integer data to density file. Various bugfixes and speed-ups. Improved 64-bit compatibility. In July 2006, Intel Corporation started using the beta version to demonstrate their new dual-core Conroe processor due to the efficiency of the 3.7 beta's SMP implementation. POV-Ray, in addition to standard geometric shapes like tori, spheres and heightfields, supports mathematically defined primitives such as the isosurface (a finite approximation of an arbitrary function), the polynomial primitive (an infinite object defined by a 15th order or lower polynomial), the julia fractal (a 3-dimensional slice of a 4-dimensional fractal), the superquadratic ellipsoid (intermediate between a sphere and a cube), and the parametric primitive (using equations that represent its surface, rather than its interior). POV-Ray internally represents objects using their mathematical definitions; all POV-Ray primitive objects can be described by mathematical functions. This is different from many 3D computer modeling packages, which typically use triangle meshes to compose all objects. This fact provides POV-Ray with several advantages and disadvantages over other rendering / modeling systems. POV-Ray primitives are more accurate than their polygonal counterparts. Objects that can be described in terms of spheres, planar surfaces, cylinders, tori and the like are perfectly smooth and mathematically accurate in POV-Ray renderings, whereas polygonal artifacts may be visible in mesh-based modeling software. POV-Ray primitives are also simpler to define than most of their polygonal counterparts. In POV-Ray, a sphere is described simply by its center and radius; in a mesh-based environment, a sphere must be described by a multitude of small polygons. On the other hand, primitive-, script-based modeling is not always a practical method to create objects such as realistic characters or complex man-made artifacts like cars. Those objects have to be created in mesh-based modeling applications such as Wings 3D or Blender and then converted to POV-Ray's own mesh format. The following is an example of the scene description language used by POV-Ray to describe a scene to render. It demonstrates the use of a background colour, camera, lights, a simple box shape having a surface normal and finish, and the transforming effects of rotation. The following script fragment shows the use of variable declaration, assignment, comparison and the while loop construct: The POV-Ray program itself does not include a modeling feature; it is essentially a pure renderer with a sophisticated model description language. To accompany this feature set, third parties have developed a large variety of modeling software, some specialized for POV-Ray, others supporting import and export of its data structures. A number of POV-Ray compatible modelers are linked from Povray.org: Modelling Programs. In 2007, POV-Ray acquired the rights to 'moray', an interactive 3-D modeling program. Official modifications to the POV-Ray source tree are done and/or approved by the POV-Team. Most patch submission and/or bug reporting is done in the POV-Ray newsgroups on the news.povray.org news server (with a Web interface also available). Since POV-Ray's source is available there are unofficial forks and patched versions of POV-Ray available from third parties; however, these are not officially supported by the POV-Team. Official POV-Ray versions currently do not support shader plug-ins. Some features, like radiosity and splines are still in development and may be subject to syntactical change. POV-Ray is distributed in compiled format for Macintosh, Windows and Linux. Support for Intel Macs is not available in the Macintosh version, but since Mac OS X is a version of Unix the Linux version can be compiled on it. POV-Ray also could be ported to any platform which has a compatible C++ compiler. People with Intel Macs can use the fork MegaPOV though, as that is compiled as universal binary. The 3.7 versions with SMP support, however, are still available only for Windows and Linux. Since version 3.7, POV-Ray is released under the Affero General Public License version 3 (or later) and thus is Free Software according to the FSF definition. Previous POV-Ray releases are distributed under the POV-Ray License, which permits free distribution of the program source code and binaries, but restricts commercial distribution and the creation of derivative works other than fully functional versions of POV-Ray. Although the source code of older versions is available for modification, due to the above restrictions, it is not open source according to the OSI definition of the term. One of the reasons that POV-Ray was not licensed under the free software GNU General Public License (GPL), or other open source licenses, is that POV-Ray was developed before the GPL-style licenses became widely used; the developers wrote their own license for the release of POV-Ray, and contributors to the software have worked under the assumption that their contributions would be licensed under the POV-Ray License. A complete rewrite of POV-Ray (POV-Ray 4.0) was discussed in 2007, with one of the aims being to switch to a free software license, such as GNU GPLv3. 