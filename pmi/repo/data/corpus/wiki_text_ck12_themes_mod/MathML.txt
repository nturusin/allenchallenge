Mathematical Markup Language (MathML) is a mathematical markup language, an application of XML for describing mathematical notations and capturing both its structure and content. It aims at integrating mathematical formulae into World Wide Web pages and other documents. It is a recommendation of the W3C math working group and part of HTML5. MathML 1 was released as a W3C recommendation in April 1998 as the first XML language to be recommended by the W3C. Version 1.01 of the format was released in July 1999 and version 2.0 appeared in February 2001. In October 2003, the second edition of MathML Version 2.0 was published as the final release by the W3C math working group. MathML was originally designed before the finalization of XML namespaces. When MathML is used in HTML (as opposed to XML) this namespace is automatically inferred by the HTML parser and need not be specified in the document. Version 3 of the MathML specification was released as a W3C Recommendation on 20 October 2010. A recommendation of A MathML for CSS Profile was later released on 7 June 2011; this is a subset of MathML suitable for CSS formatting. Another subset, Strict Content MathML, provides a subset of content MathML with a uniform structure and is designed to be compatible with OpenMath. Other content elements are defined in terms of a transformation to the strict subset. New content elements include <bind> which associates bound variables (<bvar>) to expressions, for example a summation index. The new <share> element allows structure sharing. The development of MathML 3.0 went through a number of stages. In June 2006 the W3C rechartered the MathML Working Group to produce a MathML 3 Recommendation until February 2008 and in November 2008 extended the charter to April 2010. A sixth Working Draft of the MathML 3 revision was published in June 2009. On 10 August 2010 version 3 graduated to become a "Proposed Recommendation" rather than a draft. The Second Edition of MathML 3.0 was published as a W3C Recommendation on April 10, 2014. The specification was approved as an ISO/IEC international standard 40314:2015 on June 23, 2015. MathML deals not only with the presentation but also the meaning of formula components (the latter part of MathML is known as Content MathML). Because the meaning of the equation is preserved separate from the presentation, how the content is communicated can be left up to the user. For example, web pages with MathML embedded in them can be viewed as normal web pages with many browsers, but visually impaired users can also have the same MathML read to them through the use of screen readers (e.g. using the MathPlayer plugin for Internet Explorer, Opera 9.50 build 9656+ or the Fire Vox extension for Firefox). Presentation MathML focuses on the display of an equation, and has about 30 elements. The elements' names all begin with m. A Presentation MathML expression is built up out of tokens that are combined using higher-level elements, which control their layout (there are also about 50 attributes, which mainly control fine details). Token elements generally only contain characters (not other elements). They include: <mi>x</mi> identifiers; <mo>+</mo> operators; <mn>2</mn> numbers. <mtext>non zero</mtext> text. Note however that these token elements may be used as extension points, allowing markup in host languages. MathML in HTML5 allows most inline HTML markup in mtext, and <mtext><b>non</b> zero</mtext> is conforming, with the HTML markup being used within the MathML to mark up the embedded text (making the first word bold in this example). These are combined using layout elements, that generally contain only elements. They include: <mrow> a horizontal row of items; <msup>, <munderover> , and others superscripts, limits over and under operators like sums, etc. ; <mfrac> fractions; <msqrt> and <mroot> roots; <mfenced> - surrounding content with fences, such as parentheses. As usual in HTML and XML, many entities are available for specifying special symbols by name, such as &pi; and &RightArrow;. An interesting feature of MathML is that entities also exist to express normally-invisible operators, such as &InvisibleTimes; for implicit multiplication. They are: U+2061 FUNCTION APPLICATION; U+2062 INVISIBLE TIMES; U+2063 INVISIBLE SEPARATOR; and U+2064 INVISIBLE PLUS. The full specification of MathML entities [1] is closely coordinated with the corresponding specifications for use with HTML and XML [2] in general. Thus, the expression requires two layout elements: one to create the overall horizontal row and one for the superscripted exponent. Including only the layout elements and the (not yet marked up) bare tokens, the structure looks like this: However, the individual tokens also have to be identified as identifiers (mi), operators (mo), or numbers (mn). Adding the token markup, the full form ends up as: A valid MathML document typically consists of the XML declaration, DOCTYPE declaration, and document element. The document body then contains MathML expressions which appear in <math> elements as needed in the document. Often, MathML will be embedded in more general documents, such as HTML, DocBook, or other XML schemas. A complete document that consists of just the MathML example above, is shown here: Content MathML focuses on the semantics, or meaning, of the expression rather than its layout. Central to Content MathML is the <apply> element that represents function application. The function being applied is the first child element under <apply>, and its operands or parameters are the remaining child elements. Content MathML uses only a few attributes. Tokens such as identifiers and numbers are individually marked up, much as for Presentation MathML, but with elements such as ci and cn. Rather than being merely another type of token, operators are represented by specific elements, whose mathematical semantics are known to MathML: times, power, etc. There are over a hundred different elements for different functions and operators (see [3]). For example, <apply><sin/><ci>x</ci></apply> represents and <apply><plus/><ci>x</ci><cn>5</cn></apply> represents . The elements representing operators and functions are empty elements, because their operands are the other elements under the containing <apply>. The expression could be represented as Content MathML is nearly isomorphic to expressions in a functional language such as Scheme. <apply>...</apply> amounts to Scheme's (...), and the many operator and function elements amount to Scheme functions. With this trivial literal transformation, plus un-tagging the individual tokens, the example above becomes: This reflects the long-known close relationship between XML element structures, and LISP or Scheme S-expressions. The well-known quadratic formula: would be marked up using LaTeX syntax like this: in troff/eqn like this: x={-b +- sqrt{b sup 2 4ac}} over 2a in Apache OpenOffice Math and LibreOffice Math like this (all three are valid): x={-b plusminus sqrt {b^2 4 ac}} over {2 a} x={-b sqrt {b^2 4ac}} over 2a x={-b +- sqrt {b^2 4ac}} over 2a in ASCIIMathML like this: x = (-b +- sqrt(b^2 4ac)) / (2a) The above equation could be represented in Presentation MathML as an expression tree made up from layout elements like mfrac or msqrt elements: This example uses the <annotation> element, which can be used to embed a semantic annotation in non-XML format, for example to store the formula in the format used by an equation editor such as StarMath or the markup using LaTeX syntax. Although less compact than TeX, the XML structuring promises to make it widely usable and allows for instant display in applications such as Web browsers and facilitates an interpretation of its meaning in mathematical software products. MathML is not intended to be written or edited directly by humans. MathML, being XML, can be embedded inside other XML files such as XHTML files using XML namespaces. Recent browsers such as Firefox 3+ and Opera 9.6+ (support incomplete) can display Presentation MathML embedded in XHTML. A rendering of the formula for a circle in MathML+XHTML using Firefox 22 on Mac OS X Inline MathML is also supported in HTML5 files in the current versions of WebKit (Safari), Gecko (Firefox). There is no need to specify namespaces like in the XHTML. Of the major web browsers, Gecko-based browsers (e.g., Firefox and Camino) have the most complete native support for MathML. While the WebKit layout engine has a development version of MathML, this feature is only available in version 5.1 and higher of Safari, Chrome 24 but not in later versions of Chrome. Google removed support of MathML claiming architectural security issues and low usage do not justify their engineering time. As of October 2013, the WebKit/Safari implementation has numerous bugs. Opera, between version 9.5 and 12, supports MathML for CSS profile, but is unable to position diacritical marks properly. Prior to version 9.5 it required User JavaScript or custom stylesheets to emulate MathML support. Starting with Opera 14, Opera drops support for MathML by switching to the Chromium 25 engine. Internet Explorer does not support MathML natively. Support for IE6 through IE9 can be added by installing the MathPlayer plugin. IE10 has some crashing bugs with MathPlayer and Microsoft decided to completely disable in IE11 the binary plug-in interface that MathPlayer needs. MathPlayer has a license that may limit its use or distribution in commercial webpages and software. Using or distributing the MathPlayer plugin to display HTML content via the WebBrowser control in commercial software may also be forbidden by this license. The KHTML-based Konqueror currently does not provide support for MathML. The quality of rendering of MathML in a browser depends on the installed fonts. The STIX Fonts project have released a comprehensive set of mathematical fonts under an open license. The Cambria Math font supplied with Microsoft Windows had a slightly more limited support. According to a member of the MathJax team, none of the major browser makers paid any of their developers for any MathML-rendering work; whatever support exists is overwhelmingly the result of unpaid volunteer time/work. Some editors with native MathML support (including copy and paste of MathML) are MathFlow and MathType from Design Science, MathMagic, Publicon from Wolfram Research, and WIRIS. Full MathML editor list at W3C. MathML is also supported by major office products such as Apache OpenOffice (via OpenOffice Math), LibreOffice (via LibreOffice Math), Calligra Suite (former KOffice), and MS Office 2007, as well as mathematical software products such as Mathematica, Maple and the Windows version of the Casio ClassPad 300. The W3C Browser/Editor Amaya can also be mentioned as a WYSIWYG MathML-as-is editor. Firemath, an addon for Firefox, provides a WYSIWYG MathML editor. Most editors will only produce presentation MathML. The MathDox formula editor is an OpenMath editor also providing presentation and content MathML. Formulator MathML Weaver uses WYSIWYG style to edit Presentation, Content and mixed markups of MathML. Web Equation can convert handwriting to MathML. Windows 7 has a built-in tool called Math Input Panel. It converts handwriting to MathML. (Unlike the Microsoft Office suite, the Math Input Panel does not use the OMML format, but Office applications can convert/paste from MathML into their preferred internal format.) The underlying technology is also exposed for use in other applications as an ActiveX control called Math Input Control. Several utilities for converting to and from MathML are available. W3.org maintains a list of MathML related software for download. ASCIIMathML provides a JavaScript library to rewrite a convenient Wiki-like text syntax used inline in web pages into MathML on the fly; it works in Gecko-based browsers, and Internet Explorer with MathPlayer. LaTeXMathML does the same for (a subset of) the standard LaTeX mathematical syntax. ASCIIMathML syntax would also be quite familiar to anyone used to electronic scientific calculators. MathJax, a JavaScript library for inline rendering of mathematical formulae, can be used to translate LaTeX into MathML for direct interpretation by the browser. Equation Server for .NET from soft4science can be used on the server side (ASP.NET) for TeX-Math (Subset of LaTeX math syntax) to MathML conversion. It can also create bitmap images (Png, Jpg, Gif, etc.) from TeX-Math or MathML input. jqMath is a JavaScript module that dynamically converts a simple TeX-like syntax to MathML if the browser supports it, else simple HTML and CSS. LaTeXML is a full reimplementation of the TeX typesetting system, capable of converting LaTeX documents to HTML and ePub, optionally either using MathML or converting mathematical expressions to PNG or SVG images. It is one of few tools that also provide optional Content MathML output for the converted equations. Support of MathML format accelerates software application development in such various topics, as computer-aided education (distance learning, electronic textbooks and other classroom materials); automated creation of attractive reports; computer algebra systems; authoring, training, publishing tools (both for web and desktop-oriented), and many other applications for mathematics, science, business, economics, etc. Several software vendors propose a component edition of their MathML editors, thus providing the easy way for software developers to insert mathematics rendering/editing/processing functionality in their applications. For example, Formulator ActiveX Control from Hermitech Laboratory can be incorporated into an application as a MathML-as-is editor, Design Science offer a toolkit for building web pages that include interactive math (MathFlow Developers Suite,). Another standard called OpenMath that has been designed (largely by the same people who devised Content MathML) more specifically for storing formulae semantically can also be used to complement MathML. OpenMath data can be embedded in MathML using the <annotation-xml encoding="OpenMath"> element. OpenMath content dictionaries can be used to define the meaning of <csymbol> elements. The following would define P1(x) to be the first Legendre polynomial The OMDoc format has been created for markup of larger mathematical structures than formulae, from statements like definitions, theorems, proofs, or example, to theories and text books. Formulae in OMDoc documents can either be written in Content MathML or in OpenMath; for presentation, they are converted to Presentation MathML. The ISO/IEC standard Office Open XML (OOXML) defines a different XML math syntax, derived from Microsoft Office products. However, it is partially compatible through relatively simple XSL Transformations. 