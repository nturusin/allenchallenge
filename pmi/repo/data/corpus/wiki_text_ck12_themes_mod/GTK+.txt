GTK+ (formerly GIMP Toolkit, sometimes incorrectly termed the GNOME Toolkit) is a cross-platform widget toolkit for creating graphical user interfaces. It is licensed under the terms of the LGPL, allowing both free and proprietary software to use it. It is one of the most popular toolkits for the Wayland and X11 windowing systems, along with Qt. The GTK+ library contains a set of graphical control elements (widgets), version 3.13.3 contains 203 active and 37 deprecated widgets. GTK+ is an object-oriented widget toolkit written in the C programming language; it uses GObject, that is the GLib object system, for the object orientation. While GTK+ is primarily targeted at windowing systems based upon X11 and Wayland, it works on other platforms, including Microsoft Windows (interfaced with the Windows API), and Mac OS X (interfaced with Quartz). There is also an HTML5 back-end called Broadway. GTK+ can be configured to change the look of the widgets drawn; this is done using different display engines. Several display engines exist which try to emulate the look of the native widgets on the platform in use. Starting with version 2.8, released in 2005, GTK+ began the transition to using Cairo to render the majority of its graphical control elements. Since GTK+ version 3.0, all the rendering is done using Cairo. GTK+ Scene Graph Kit (GSK) is the forthcoming scene graph (canvas) for GTK+ in the process of being written by Emanuelle Bassi. GSK is planned to be ready and fully integrated into GTK+ version 3.20, to be released in March 2016. Graphene is a collection of geometry types points, sizes, rectangles, vectors, quads, quaternions, matrices. It tries to optimize them so that the naive, four floats for vertex/four vertices for matrix implementation is not the only one available. Graphene's API makes it possible to avoid exposing C arrays of floating point values, or opaque memory regions, enabling the manipulation of vectors and matrices in other languages as well. Having OpenGL (or OpenGL ES) support in GDK facilitates a slightly better control of the graphics pipeline; OpenGL is well suited for compositing textured data but totally unsuited for drawing. GtkInspector has been introduced with version 3.14. A library written in one programming language may be used in another language if bindings are written; GTK+ has a range of bindings for various languages. There are several GUI designers for GTK+. The following projects are active as of July 2011: Glade, supports GtkBuilder, which is a GTK+ built-in GUI description format. Gazpacho, GUI builder for the GTK+ toolkit written in Python Crow Designer, relies on its own GuiXml format and GuiLoader library. Stetic, part of MonoDevelop, oriented towards Gtk#. = GtkBuilder offers you the opportunity to design user interfaces without writing a single line of code. This is possible through describing the interface by a XML file and then loading the XML description at runtime and create the objects automatically, which the Builder class does for you. For the purpose of not needing to write the XML manually the Glade Interface Designer lets you create the user interface in a WYSIWYG manner. This method has several advantages: Less code needs to be written. UI changes can be seen more quickly, so UIs are able to improve. Designers without programming skills can create and edit UIs. The description of the user interface is independent from the programming language being used. There is still code required for handling interface changes triggered by the user, but Gtk.Builder allows you to focus on implementing that functionality. Gtk# is a set of .NET bindings for the GTK+ GUI toolkit and assorted GNOME libraries. The library facilitates building graphical GNOME applications using Mono or any other compliant CLR. Gtk# is an event-driven system like any other modern windowing library where every widget allows you to associate handler methods, which get called when particular events happen. Applications built using Gtk# will run on many platforms including Linux, Windows and OS X. The Mono packages for Windows include GTK+, Gtk# and a native theme to make applications look like native Windows applications. Starting with Mono 1.9, running Gtk# applications on Mac OS X no longer requires the user to run the X11 server. Glade can be used with the Glade# bindings to easily design GUI applications. A GUI designer called Stetic is integrated with the MonoDevelop IDE. In addition to support the standard GTK/GNOME stack of development tools, the gtk-dotnet.dll assembly provides a bridge to consume functionality available on the .NET stack. At this point this includes the functionality to use System.Drawing to draw on a widget. GNOME Core Applications employs the newest GUI widgets from the cutting-edge version of GTK+ and demonstrates its capabilities. Several desktop environments utilize GTK+ as the widget toolkit. Unity, the default desktop environment of Ubuntu GNOME, based on GTK+, meaning that programs native to GNOME use GTK+ Consort, the GNOME 3.4 Fallback Mode fork from SolusOS Cinnamon, a fork of GNOME 3 and uses GTK+ version 3 MATE, a fork of GNOME 2 made after the release of GNOME 3 and thus uses GTK+ version 2 (support for GTK+ version 3 is in development.) Xfce, currently based on GTK+ 2 with support for and eventual plans for a migration to GTK+ 3 LXDE (Lightweight X11 Desktop Environment) is based on GTK+ 2 Pantheon uses GTK+ 3 exclusively, being developed by elementary OS Sugar is a desktop environment oriented towards children's education, which uses GTK+, especially PyGTK ROX Desktop, a lightweight desktop, with features from the GUI of RISC OS GPE, the GPE Palmtop Environment Access Linux Platform (successor of the Palm OS PDA platform) KDE, though based on Qt, has integration with GTK+-based programs and themes since version 4.2 GTK+ programs can run on top of X11-based desktop environments or window managers even those not made with GTK+, provided the required libraries are installed; this includes Mac OS X if X11.app is installed. GTK+ can also run under Microsoft Windows, where it is used by some popular cross-platform applications like Pidgin and GIMP. wxWidgets, a cross-platform GUI toolkit, uses GTK+ for GNU/Linux operating systems. Other ports include DirectFB (used by the Debian installer, for example) and ncurses. The following window managers use GTK+: Some notable applications that use GTK+ as a widget toolkit include: The following code presents a graphical GTK+ hello-world program in the C programming language. This program has a window with the title "Hello, world!" and a label with similar text. Needs installing the libraries first in debian or derivatives: $ sudo apt-get install libgtk-3-dev Using pkg-config in a Unix shell, this code can be compiled with the following command (assume above source has file name "helloworld.c"): $ cc -Wall helloworld.c -o helloworld $(pkg-config --cflags --libs gtk+-3.0) Invoke the program $ ./helloworld GTK+ was originally designed and used in the GNU Image Manipulation Program (GIMP) as a replacement of the Motif toolkit; at some point Peter Mattis became disenchanted with Motif and began to write his own GUI toolkit called the GIMP toolkit and had successfully replaced Motif by the 0.60 release of GIMP. Finally GTK was re-written to be object-oriented and was renamed GTK+. This was first used in the 0.99 release of GIMP. The GTK+ 2.0.0 release series introduced new features which include improved text rendering using Pango, a new theme engine, improved accessibility using the Accessibility Toolkit, transition to Unicode using UTF-8 strings, and a more flexible API. Starting with version 2.8, GTK+ 2 depends on the Cairo graphics library for rendering vector graphics. GTK+ version 3.0.0 included revised input device handling, support for themes written with CSS-like syntax, and the ability to receive information about other opened GTK+ applications. The name GTK+ originates from GTK; the plus was added to distinguish an enhanced version. It was originally created for the GNU Image Manipulation Program (GIMP), a free software raster graphics editor, in 1997 by Spencer Kimball and Peter Mattis, members of eXperimental Computing Facility (XCF) at the University of California, Berkeley. It is now maintained by members of the GNOME Foundation. The GNOME team releases new versions on a regular basis. As of version 3.14.1 the development of GTK+ is still ongoing at a fast pace. Components are being worked on and with the arrival of the new scene graph system (canvas) may be finally released with version 4.0. The most common criticism towards GTK+ is a lack of backwards-compatibility in major updates, most notably in the API: Dirk Hohndel, co-developer of Subsurface and member of Intel's Open-Source Technology Center, criticized the GTK+ developers for being abrasive and ignoring most community requests. Hong Jen Yee, developer of LXDE, expressed disdain for version 3 of the GTK+ toolkit's radical API changes and increased memory usage, and ported LXDE to Qt as a result. The Audacious music player plans to move back to GTK+ version 2 starting with version 3.6, with the long-term goal of migrating to Qt. The reasons stated by the developers for this include a transition to client-side window decorations, which they claim cause the application to look "GNOME-y and out of place." Wireshark also is transitioning to use Qt for poor GTK+'s cross-platform support. 