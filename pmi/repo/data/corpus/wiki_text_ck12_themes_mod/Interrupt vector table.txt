An interrupt vector table, a concept common across various processor architectures, is a table of interrupt vectors that associates an interrupt handler with an interrupt request in a machine specific way. A dispatch table is one method of implementing an interrupt vector table. Most processors have an interrupt vector table (IVT), including chips from Infineon, Microchip Atmel, Freescale, AMD, Intel, etc. An interrupt vector table is used in all 3 of the 3 most popular methods of finding the starting address of the interrupt service routine: The "predefined" method loads the program counter (PC) directly with the address of some entry inside the interrupt vector table. The jump table itself contains executable code. While in principle an extremely short interrupt handler could be stored entirely inside the interrupt vector table, in practice the code at each and every entry is "JMP address" where the address is the address of the interrupt service routine (ISR) for that interrupt. The Atmel AVR and all 8051 and Microchip microcontrollers use the predefined approach. The "fetch" method loads the PC indirectly, using the address of some entry inside the interrupt vector table to pull an address out of that table, and then loading the PC with that address. Each and every entry of the IVT is the address of an interrupt service routine. All Motorola/Freescale microcontrollers use the fetch method. The "interrupt acknowledge" method, the external device gives the CPU an interrupt handler number. The interrupt acknowledge method is used by the Intel Pentium and many older microprocessors. When the CPU is interrupted by an interrupt, it looks up the interrupt handler in the interrupt vector table, and transfers control to it. 