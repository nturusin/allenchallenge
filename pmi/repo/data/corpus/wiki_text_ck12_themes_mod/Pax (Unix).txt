pax is an archiving utility created by POSIX and defined by the POSIX.1-2001 standard. Rather than sort out the incompatible options that have crept up between tar and cpio, along with their implementations across various versions of UNIX, the IEEE designed a new archive utility. The name "pax" is an acronym for portable archive exchange. The command invocation and command structure is somewhat a unification of both tar and cpio. pax has four general modes which are invoked by a combination of the -r ("read") option and -w ("write") option. This table summarizes the modal behaviour: Examples: List contents of an archive: pax < archive.tar Extract contents of an archive into the current directory: pax -r < archive.tar Create an archive of the current directory: When used in the cpio style, the find command can be used to get a list of files to be archived: find . -depth -print | pax -wd > archive.tar Copy current directory tree to another location: The target directory must exist beforehand! find . -depth -print | pax -rwd target_dir pax can be either used in a similar manner as cpio or tar. The cpio syntax takes a list of files from standard input (stdin) when archiving or an already existing archive, when in listing contents or extracting files: find . -depth -print | pax -wd > archive.tar and pax -r < archive.tar respectively. It is possible to invoke these commands in a tar-like syntax as well: pax -wf archive.tar . and pax -rf archive.tar And for clarity and completeness: Listing files from an archive: pax -f archive.tar and "copy" mode: pax -rw . archive_dir The -f option specifies which archive to use, instead of writing to stdout or reading from stdin. Also note the -d option when using pax together with find, this keeps pax from traversing directory trees. Most implementations of pax use the -z (gzip) and -j (bzip2) switches for compression, this feature however, is not specified by POSIX. It is important to note that pax cannot append to compressed archives. Example for extracting a gziped archive: pax -rzf archive.tar.gz Due to the possibility to use pax in a cpio-like fashion, it is possible to use whatever compression program, as an example xz is used here: pax -w . | xz > archive.tar.xz and listing an xz-compressed archive: xzcat archive.tar.xz | pax As of September 2009, the version of pax included with most Linux distributions (a derivative of an old MirBSD pax) supports the following formats, selectable via the -x option: cpio - The extended cpio interchange format specified in the IEEE Std 1003.2 ("POSIX.2") standard. bcpio - The old binary cpio format. sv4cpio - The System V release 4 cpio. sv4crc - The System V release 4 cpio with file crc checksums. tar - The old BSD tar format as found in BSD4.3. ustar (default) - The tar interchange format specified in the IEEE Std 1003.2 ("POSIX.2") standard. Notably the pax format itself is not supported by this version of pax. Other implementations, such as Heirloom pax support further formats, including the pax file format itself. pax supports archiving on multiple volumes. When the end of a volume is reached, the following message appears: When restoring an archive from multiple media, pax asks for the next media in the same fashion, when the end of the media is reached before the end of the archive. Despite being standardized in 2001 by IEEE, as of 2010, pax enjoys relatively little popularity or adoption. pax is required to be present in all conformant systems by Linux Standard Base since version 3.0 (released on July 6, 2005), but so far few Linux distributions ship and install it by default. However, most distributions include pax as a separately installable package. pax has also been present in Windows NT, where it is limited to file archives (tapes not supported). It was later moved to the Interix subsystem. It does not support archiving or restoring Win32 ACLs. Packages handled by the Installer (OS X) often carry the bulk of their contents in an Archive.pax.gz file that may be read using the pax utility. 